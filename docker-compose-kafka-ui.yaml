version: "2.1"
services:

  ### Zookeeper ###

  zoo1:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo1
    ports:
    - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888

  ### Kafka ###

  kafka-cp-kafka-headless:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka-cp-kafka-headless
    ports:
    - "9092:9092"
    - "19092:19092"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka-cp-kafka-headless:9092,EXTERNAL://kafka-cp-kafka-headless:19092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-cp-kafka-headless:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
    - zoo1

  ### Schema Registry ###

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:5.2.1
  #   hostname: schema-registry
  #   ports:
  #   - "18081:18081"
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-cp-kafka-headless:9092
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18081,http://schema-registry:28081
  #   depends_on:
  #   - zoo1
  #   - kafka-cp-kafka-headless

  ### Schema Registry UI ###

  # schema-registry-ui:
  #   image: landoop/schema-registry-ui:0.9.4
  #   hostname: schema-registry-ui
  #   ports:
  #   - "8001:8000"
  #   environment:
  #     SCHEMAREGISTRY_URL: http://schema-registry:28081/
  #     PROXY: "true"
  #   depends_on:
  #   - schema-registry



  ### Spring Boot Demo###
  demo:
    image: demo-fraud-webapp:latest
    hostname: demo
    ports:
      - "5656:5656"
    depends_on:
      - zoo1
      - kafka-cp-kafka-headless
